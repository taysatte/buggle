generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                String   @id @default(uuid())
  email             String?  @unique
  name              String?
  avatarUrl         String?
  currentStreak     Int      @default(0)
  longestStreak     Int      @default(0)
  experiencePoints  Int      @default(0)
  preferredLanguage String?
  theme             String?  @default("dark")
  submissions       Submission[]
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model Submission {
  id        Int      @id @default(autoincrement())
  attempts  Int
  timeTaken Int
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  puzzleId  Int
  puzzle    Puzzle   @relation(fields: [puzzleId], references: [id])
  createdAt DateTime @default(now())
  @@unique([userId, puzzleId])
}

model Puzzle {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  starterCode String   @db.Text 
  solutionCode String? @db.Text 
  difficulty  String? 
  hints       String?  @db.Text 
  language    String? 
  testCases   TestCase[]
  submissions Submission[]
  dailyPuzzles DailyPuzzle[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model DailyPuzzle {
  id          Int      @id @default(autoincrement())
  date        DateTime @unique // Date-only (no time component), represents the day
  puzzleId    Int
  puzzle      Puzzle   @relation(fields: [puzzleId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  @@index([date]) // Index for fast lookups by date
}

model TestCase {
  id             Int    @id @default(autoincrement())
  input          String @db.Text 
  expectedOutput String @db.Text 
  isPublic       Boolean @default(true) 
  puzzleId       Int
  puzzle         Puzzle @relation(fields: [puzzleId], references: [id], onDelete: Cascade)
  createdAt      DateTime @default(now())
}
